[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu
sensor_mcu: eddy
min_temp: 10
max_temp: 100
 
[temperature_sensor btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26
 
# For all Eddy (USB/Duo/Coil)
[probe_eddy_ng btt_eddy]
sensor_type: ldc1612
# Eddy USB/Duo values below. For Eddy Coil, replace these two with mcu/bus for your setup.
i2c_mcu: eddy
i2c_bus: i2c0f
samples_per_second: 250 # 250 by default
reg_drive_current: 15
tap_drive_current: 16
#z_offset: 2.98
x_offset: 0 # These offsets are for this mount https://www.printables.com/model/1115090-eddy-duo-mount-v2
y_offset: 25
tap_adjust_z: .07 #-0.055           #-0.075 for stock buildplate
tap_samples_stddev: 0.05
tap_samples: 5
probe_speed: 3.0
lift_speed: 10.0
move_speed: 50.0
tap_speed: 3.0
tap_mode: butter

[bed_mesh]
speed: 300 #500
horizontal_move_z: 3
#mesh_min: 25,25 # These min/max points are with the above linked Eddy mount on the stock toolhead.
mesh_min: 30,30
mesh_max: 330,340
probe_count: 11,11 # 25,25 # Set to a lower 15,15 default as it appears a too high probe_count (too dense mesh) is bad with rapid_scan, see: https://www.klipper3d.org/Bed_Mesh.html#rapid-continuous-scanning
algorithm: bicubic
bicubic_tension: 0.35 #0.5
split_delta_z: 0.0125 # see: https://www.klipper3d.org/Bed_Mesh.html#move-splitting
mesh_pps: 4,4
adaptive_margin: 5
fade_start: 1
fade_end: 10
fade_target: 0
scan_overshoot: 5  #uncomment this section if you still have room left over on the X axis for some scan overshoot to product smoother movements and more accurate scanning. Uncommenting this should be fine if you are using a standard voron mount.
 
[safe_z_home]
home_xy_position: 177, 177
z_hop: 10
z_hop_speed: 25
speed: 200
 
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: _QUAD_GANTRY_LEVEL
gcode:
    SAVE_GCODE_STATE NAME=STATE_QGL
    BED_MESH_CLEAR
    {% if not printer.quad_gantry_level.applied %}
    # Note! Replace this 5 with whatever you want the coarse QGL to happen at.
    # BTT Eddy should keep 5, Mellow Fly/Cartographer can use 10
    _QUAD_GANTRY_LEVEL horizontal_move_z=5 retry_tolerance=1       
    {% endif %}
    _QUAD_GANTRY_LEVEL horizontal_move_z=2
    # G28 Z
    RESTORE_GCODE_STATE NAME=STATE_QGL
 
[gcode_macro Z_TILT_ADJUST]
gcode:
    SAVE_GCODE_STATE NAME=STATE_Z_TILT
    BED_MESH_CLEAR
    {% if not printer.z_tilt.applied %}
    # Note! Replace this 5 with whatever you want the coarse QGL to happen at.
    # BTT Eddy should keep 5, Mellow Fly/Cartographer can use 10
    _Z_TILT_ADJUST horizontal_move_z=5 retry_tolerance=1
    {% endif %}
    _Z_TILT_ADJUST horizontal_move_z=2
    # G28 Z
    RESTORE_GCODE_STATE NAME=STATE_Z_TILT
 